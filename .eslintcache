[{"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js":"1","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js":"3","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js":"4","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js":"5","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js":"6","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js":"7","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js":"8","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js":"9","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\TemperaturePrediction.js":"10"},{"size":944,"mtime":1613539341762,"results":"11","hashOfConfig":"12"},{"size":5064,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":364,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2766,"mtime":1612757731490,"results":"15","hashOfConfig":"12"},{"size":3832,"mtime":1611897840298,"results":"16","hashOfConfig":"12"},{"size":3021,"mtime":1613562490961,"results":"17","hashOfConfig":"12"},{"size":4043,"mtime":1613562579707,"results":"18","hashOfConfig":"12"},{"size":3286,"mtime":1613545022845,"results":"19","hashOfConfig":"12"},{"size":3293,"mtime":1611977201095,"results":"20","hashOfConfig":"12"},{"size":1993,"mtime":1613566541919,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dbh6cv",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js",[],["44","45"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js",["46"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js",["47","48","49"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js",["50","51"],"import React, { useState, useEffect, useCallback } from 'react'\r\n\r\nconst fetchCurrentWeather = ({ authorizationKey, locationName }) => {\r\n\treturn fetch(\r\n\t\t`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${authorizationKey}&locationName=${locationName}`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconst locationData = data.records.location[0]\r\n\t\t\tconst weatherElements = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['WDSD', 'TEMP'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.elementValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tobservationTime: locationData.time.obsTime,\r\n\t\t\t\tlocationName: locationData.locationName,\r\n\t\t\t\ttemperature: weatherElements.TEMP,\r\n\t\t\t\twindSpeed: weatherElements.WDSD,\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nconst fetchWeatherForecast = ({ authorizationKey, cityName }) => {\r\n\treturn fetch(\r\n\t\t`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${authorizationKey}&locationName=${cityName}`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconst locationData = data.records.location[0]\r\n\t\t\tconst weatherElements = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['Wx', 'PoP', 'CI'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.time[0].parameter;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\tconsole.log('weatherElements', weatherElements)\r\n\t\t\tconst predicationData = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['MaxT'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.time\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\tconst predicationTemps = predicationData.MaxT.flatMap(item => item.parameter.parameterName)\r\n\r\n\t\t\tconsole.log('predicationTemps', predicationTemps)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdescription: weatherElements.Wx.parameterName,\r\n\t\t\t\tweatherCode: weatherElements.Wx.parameterValue,\r\n\t\t\t\trainPossibility: weatherElements.PoP.parameterName,\r\n\t\t\t\tcomfortability: weatherElements.CI.parameterName,\r\n\t\t\t\tpredicationTemps: predicationTemps\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\n\r\nconst useWeatherAPI = ({ baseUrl, currentWeatherUrl, forecastWeatherUrl, locationName, cityName, authorizationKey }) => {\r\n\tconst [weatherElement, setWeatherElement] = useState({\r\n\t\tobservationTime: new Date(),\r\n\t\tlocationName: '',\r\n\t\ttemperature: 0,\r\n\t\twindSpeed: 0,\r\n\t\tdescription: '',\r\n\t\tweatherCode: 0,\r\n\t\trainPossibility: 0,\r\n\t\tcomfortability: '',\r\n\t\tisLoading: true,\r\n\t\tpredicationTemps:[]\r\n\t})\r\n\tconst fetchData = useCallback(async () => {\r\n\t\tsetWeatherElement((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tisLoading: true,\r\n\t\t}))\r\n\t\tconst [currentWeather, weatherForecast] = await Promise.all([\r\n\t\t\tfetchCurrentWeather({ baseUrl, currentWeatherUrl, authorizationKey, locationName}),\r\n\t\t\tfetchWeatherForecast({ baseUrl,forecastWeatherUrl, authorizationKey, cityName }),\r\n\t\t])\r\n\r\n\t\tsetWeatherElement({\r\n\t\t\t...currentWeather,\r\n\t\t\t...weatherForecast,\r\n\t\t\tisLoading: false,\r\n\t\t})\r\n\t}, [authorizationKey, locationName, cityName])\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [fetchData])\r\n\treturn [weatherElement, fetchData]\r\n}\r\n\r\nexport default useWeatherAPI\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\TemperaturePrediction.js",["52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":49},{"ruleId":"57","severity":1,"message":"61","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"62","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":49},{"ruleId":"57","severity":1,"message":"63","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":98,"column":5,"nodeType":"66","endLine":98,"endColumn":47,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"68","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":23},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'baseUrl', 'currentWeatherUrl', and 'forecastWeatherUrl'. Either include them or remove the dependency array.","ArrayExpression",["71"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName]",{"range":"74","text":"75"},[3116,3158],"[baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName]"]