[{"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js":"1","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js":"3","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js":"4","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js":"5","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js":"6","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js":"7","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js":"8","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js":"9","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\TemperaturePrediction.js":"10","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyTemperaturePrediction.js":"11","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyWeatherIcons.js":"12"},{"size":944,"mtime":1613804688379,"results":"13","hashOfConfig":"14"},{"size":5064,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":364,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2782,"mtime":1613804688363,"results":"17","hashOfConfig":"14"},{"size":3832,"mtime":1611897840298,"results":"18","hashOfConfig":"14"},{"size":3347,"mtime":1614143564821,"results":"19","hashOfConfig":"14"},{"size":6147,"mtime":1614064047583,"results":"20","hashOfConfig":"14"},{"size":5214,"mtime":1614143674165,"results":"21","hashOfConfig":"14"},{"size":3293,"mtime":1611977201095,"results":"22","hashOfConfig":"14"},{"size":2927,"mtime":1614000430919,"results":"23","hashOfConfig":"14"},{"size":2298,"mtime":1614141150646,"results":"24","hashOfConfig":"14"},{"size":2794,"mtime":1613804688366,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dbh6cv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js",[],["54","55"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js",["56","57","58"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\TemperaturePrediction.js",["59"],"import React, { useState, useEffect } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { ThemeProvider } from '@emotion/react'\r\nimport dayjs from 'dayjs'\r\nimport { NetworkOnly } from 'workbox-strategies';\r\n\r\n\r\nconst theme = {\r\n\tlight: {\r\n\t\tbackgroundColor: '#ededed',\r\n\t\tforegroundColor: '#f9f9f9',\r\n\t\tboxShadow: '0 1px 3px 0 #999999',\r\n\t\ttitleColor: '#212121',\r\n\t\ttemperatureColor: '#757575',\r\n\t\ttextColor: '#828282',\r\n\r\n\t},\r\n\tdark: {\r\n\t\tbackgroundColor: '#1F2022',\r\n\t\tforegroundColor: '#121416',\r\n\t\tboxShadow:\r\n\t\t\t'0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\r\n\t\ttitleColor: '#f9f9fa',\r\n\t\ttemperatureColor: '#dddddd',\r\n\t\ttextColor: '#cccccc',\r\n\t},\r\n};\r\n\r\n\r\nconst TemperaturePredictionWrapper = styled.div`\r\n  position: relative;\r\n\twidth: 100%;\r\n  background-color: transparent;\r\n\tbox-sizing: border-box;\r\n  transition-duration: 0.5s\r\n`\r\n\r\n\r\nconst TemperaturePrediction = ({ predicationTemps, moment, observationTime }) => {\r\n\tconst [currentTheme, setCurrentTheme] = useState('dark')\r\n \tuseEffect(() => {\r\n \tsetCurrentTheme(moment === 'day' ? 'light' : 'dark')\r\n\t\t}, [moment])\r\n\r\n\tlet unity = 25\r\n\tlet by = \"60\"\r\n\tlet byt0 = `${(parseInt(by)- unity)}`\r\n\tlet dy1 = `${(parseInt(by) + 2 * (predicationTemps[0] - predicationTemps[1]))}`\r\n\tlet byt1 = `${(parseInt(dy1) - unity)}`\r\n\tlet dy2 = `${(parseInt(by) + 2 * (predicationTemps[0] - predicationTemps[2]))}`\r\n\tlet byt2 = `${(parseInt(dy2) - unity)}`\r\n\tlet bx = \"60\"\r\n\tlet dx1 = `${2 * parseInt(bx)}`\r\n\tlet dx2 = `${3 * parseInt(bx)}`\r\n\tlet points = `${bx},${by} ${dx1},${dy1} ${dx2},${dy2}`\r\n\r\n\tlet after6hour = new Date();\r\n\tafter6hour.setHours(after6hour.getHours() + 6)\r\n\tlet after12hour = new Date();\r\n\tafter12hour.setHours(after12hour.getHours() + 12)\r\n\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme[currentTheme]}>\r\n\t\t\t<TemperaturePredictionWrapper>\r\n\t\t\t\t<svg className=\"temsvg\" fill={theme[currentTheme].titleColor}>\r\n\t\t\t\t\t<text x={bx} y={byt0}> {new Intl.DateTimeFormat('zh-TW', {\r\n\t\t\t\t\t\thour: 'numeric',\r\n\t\t\t\t\t\tminute: 'numeric',\r\n\t\t\t\t\t}).format(dayjs(observationTime))} {' '} </text>\r\n\t\t\t\t\t<text x={bx} y={by}> {predicationTemps[0]}°C</text>\r\n\t\t\t\t\t<circle cx={bx} cy={by} r=\"3\"></circle>\r\n\t\t\t\t\t<text x={dx1} y={byt1}>{new Intl.DateTimeFormat('zh-TW', {\r\n\t\t\t\t\t\thour: 'numeric',\r\n\t\t\t\t\t\tminute: 'numeric',\r\n\t\t\t\t\t}).format(dayjs(after6hour))} {' '} </text>\r\n\t\t\t\t\t<text x={dx1} y={dy1}>{predicationTemps[1]}°C</text>\r\n\t\t\t\t\t<circle cx={dx1} cy={dy1} r=\"3\"></circle>\r\n\t\t\t\t\t<text x={dx2} y={byt2}>{new Intl.DateTimeFormat('zh-TW', {\r\n\t\t\t\t\t\thour: 'numeric',\r\n\t\t\t\t\t\tminute: 'numeric',\r\n\t\t\t\t\t}).format(dayjs(after12hour))} {' '} </text>\r\n\t\t\t\t\t<text x={dx2} y={dy2}>{predicationTemps[2]}°C</text>\r\n\t\t\t\t\t<circle cx={dx2} cy={dy2} r=\"3\"></circle>\r\n\t\t\t\t\t<polyline points={points} stroke={theme[currentTheme].titleColor}></polyline>\r\n\t\t\t\t</svg>\r\n\t\t\t</TemperaturePredictionWrapper>\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default TemperaturePrediction\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyTemperaturePrediction.js",["60","61","62","63","64","65"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport WeeklyWeatherIcons from './WeatherIcon'\r\nimport dayjs from 'dayjs'\r\n\r\n\r\n\r\nconst Container= styled.div`\r\n\theight: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n\ttransition-duration: 1s;\r\n\topacity: 0;\r\n\t.dayWeather:nth-child(1) {\r\n    transition-delay: 0.2s;\r\n  }\r\n\t.dayWeather:nth-child(2) {\r\n\t\ttransition-delay: 0.3s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(3) {\r\n\t\ttransition-delay: 0.4s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(4) {\r\n\t\ttransition-delay: 0.5s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(5) {\r\n\t\ttransition-delay: 0.6s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(6) {\r\n\t\ttransition-delay: 0.7s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(7) {\r\n\t\ttransition-delay: 0.8s;\r\n\t}\r\n`\r\n\r\nconst DayWeather = styled.div`\r\n\tpadding: 2px;\r\n\tmargin: 10px 5px 0 10px;\r\n  width: calc(100% / 7 - 5px);\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  top: 20px;\r\n  transition: 0.5s;\r\n\tborder-radius: 5px;\r\n\topacity: 0;\r\n\tsvg {\r\n\t\twidth: 100%;\r\n  \tmax-width: 30px;\r\n\t}\r\n\tsvg .sun {\r\n\t\tfill: #FFD633;\r\n\t\tstroke-width: 30px;\r\n\t\tstroke: rgba(255, 214, 51, 0.5);\r\n\t\tstroke-dasharray: 5px;\r\n\t}\r\n  svg .rain {\r\n\t\tstroke: #4DACFF;\r\n\t\tstroke-width: 5px;\r\n\t}\r\n svg .cloud {\r\n\t\tfill: whitesmoke;\r\n\t}\r\n\th3 {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 8px;\r\n\t\tfont-weight: 400;\r\n\t\tcolor: #212121;\r\n\t\tletter-spacing: 1px;\r\n\t\tmargin: 0px;\r\n\t\tpadding: 0px;\r\n\t}\r\n`\r\n\r\n\r\nconst WeeklyTemperaturePrediction = ({ weatherCodes, weeklyPoP12h,\r\n\tweeklyT, moment }) => {\r\n\tlet indexs = [0, 1, 2, 3, 4, 5, 6]\r\n\tconst weeks = [\"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SAT\", \"SUN\"]\r\n\r\n\tlet date = (weatherCodes.map(item => dayjs(item.time).day())).filter((item, index) => index % 2 == 0)\r\n\tweatherCodes = (weatherCodes.map(item => item.elementValue)).filter((item, index) => index % 2 == 0)\r\n\r\n\tweeklyT = weeklyT.filter((item,index) => index % 2 == 0)\r\n\r\n\tconst dayWeather = indexs.map((index) =>\r\n\t\t<DayWeather className=\"dayWeather\">\r\n\t\t\t<h3>{weeks[date[index]]}</h3>\r\n\t\t\t<WeeklyWeatherIcons weatherCode={weatherCodes[index]} moment={moment} />\r\n\t\t\t<h3>{weeklyT[index]}°C</h3>\r\n\t\t\t{/* <h3>{weeklyPoP12h[index]}%</h3> */}\r\n\t\t</DayWeather>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Container className=\"box\">\r\n\t\t\t{dayWeather}\r\n\t\t</Container>\r\n\r\n\t)\r\n}\r\n\r\nexport default WeeklyTemperaturePrediction\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyWeatherIcons.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":106,"column":65,"nodeType":"78","messageId":"79","endLine":106,"endColumn":67},{"ruleId":"80","severity":1,"message":"81","line":151,"column":5,"nodeType":"82","endLine":151,"endColumn":47,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":21},{"ruleId":"72","severity":1,"message":"85","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":23},{"ruleId":"72","severity":1,"message":"86","line":1,"column":25,"nodeType":"74","messageId":"75","endLine":1,"endColumn":33},{"ruleId":"72","severity":1,"message":"87","line":1,"column":35,"nodeType":"74","messageId":"75","endLine":1,"endColumn":44},{"ruleId":"76","severity":1,"message":"77","line":86,"column":98,"nodeType":"78","messageId":"79","endLine":86,"endColumn":100},{"ruleId":"76","severity":1,"message":"77","line":87,"column":97,"nodeType":"78","messageId":"79","endLine":87,"endColumn":99},{"ruleId":"76","severity":1,"message":"77","line":89,"column":53,"nodeType":"78","messageId":"79","endLine":89,"endColumn":55},{"ruleId":"68","replacedBy":"88"},{"ruleId":"70","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'AQIKEY', 'baseUrl', 'currentWeatherUrl', 'forecastWeatherUrl', and 'weeklyWeatherUrl'. Either include them or remove the dependency array.","ArrayExpression",["92"],"'NetworkOnly' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName, weeklyWeatherUrl, AQIKEY]",{"range":"95","text":"96"},[5042,5084],"[baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName, weeklyWeatherUrl, AQIKEY]"]