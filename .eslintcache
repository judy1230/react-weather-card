[{"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js":"1","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js":"3","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js":"4","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js":"5","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js":"6","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js":"7","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js":"8","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js":"9"},{"size":869,"mtime":1611628116440,"results":"10","hashOfConfig":"11"},{"size":5064,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":364,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2776,"mtime":1611544378421,"results":"14","hashOfConfig":"11"},{"size":3832,"mtime":1611897840298,"results":"15","hashOfConfig":"11"},{"size":2552,"mtime":1611901767999,"results":"16","hashOfConfig":"11"},{"size":3803,"mtime":1611901768000,"results":"17","hashOfConfig":"11"},{"size":3685,"mtime":1611631462864,"results":"18","hashOfConfig":"11"},{"size":3340,"mtime":1611902505709,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"dbh6cv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js",[],["41","42"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js",["43"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js",["44","45","46"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { ReactComponent as AirFlowIcon } from '../images/airFlow.svg'\r\nimport { ReactComponent as RainIcon } from '../images/rain.svg'\r\nimport { ReactComponent as RefreshIcon } from '../images/refresh.svg'\r\nimport { ReactComponent as LoadingIcon } from '../images/loading.svg'\r\n//step 1 : 載入齒輪圖示\r\nimport { ReactComponent as CogIcon } from '../images/cog.svg'\r\nimport dayjs from 'dayjs'\r\nimport WeatherIcon from '../components/WeatherIcon'\r\n\r\n\r\nconst WeatherCardWrapper = styled.div`\r\n  position: relative;\r\n  min-width: 360px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  box-sizing: border-box;\r\n  padding: 30px 15px;\r\n`\r\nconst Location = styled.div`\r\n  ${props => console.log(props)}\r\n  font-size: 28px;\r\n  color: ${props => props.theme === 'dark' ? '#dadada' : '#212121'};\r\n  margin-bottom: 20px;\r\n`\r\nconst Description = styled.div`\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 30px;\r\n`\r\nconst CurrentWeather = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n`\r\nconst Temperature = styled.div`\r\n  color: ${({ theme }) => theme.temperatureColor};\r\n  font-size: 96px;\r\n  font-weight: 300;\r\n  display: flex;\r\n`\r\nconst Celsius = styled.div`\r\n  font-weight: normal;\r\n  font-size: 42px;\r\n`\r\nconst AirFlow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16x;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 20px;\r\n  svg {\r\n    width: 25px;\r\n    height: auto;\r\n    margin-right: 30px;\r\n  }\r\n`\r\nconst Rain = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16x;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.textColor};\r\n  svg {\r\n    width: 25px;\r\n    height: auto;\r\n    margin-right: 30px;\r\n  }\r\n`\r\nconst Refresh = styled.div`\r\n  @keyframes rotate{\r\n    from {\r\n      transform: rotate(360deg)\r\n    }\r\n    to {\r\n      transform: rotate(0deg)\r\n    }\r\n  }\r\n  position: absolute;\r\n  right: 15px;\r\n  bottom: 15px;\r\n  font-size: 12px;\r\n  display: inline-flex;\r\n  align-items: flex-end;\r\n  color: ${({ theme }) => theme.textColor};\r\n  svg {\r\n    margin-left: 10px;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    animation: rotate infinite 1.5s linear;\r\n    animation-duration: ${({ isLoading }) => (isLoading ? '1.5s' : '0s')}\r\n  }\r\n`\r\n//step 2 : 透過@emotion/styled幫齒輪新增樣式\r\nconst Cog = styled(CogIcon)`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 15px;\r\n  width: 15px;\r\n  height: 15px;\r\n  cursor: pointer;\r\n`\r\n//step 7 : 從 props 中取出 handleCurrentPageChange\r\nconst WeatherCard = ({ weatherElement, moment, fetchData, handleCurrentPageChange }) => {\r\n\tconst {\r\n\t\tobservationTime,\r\n\t\tlocationName,\r\n\t\tdescription,\r\n\t\twindSpeed,\r\n\t\ttemperature,\r\n\t\trainPossibility,\r\n\t\tisLoading,\r\n\t\tcomfortability,\r\n\t\tweatherCode\r\n\t} = weatherElement\r\n\r\n\treturn (\r\n    <WeatherCardWrapper>\r\n      {/* step 3 : 放入齒輪圖示 */}\r\n      {/* step 8 : 當齒輪被點擊時, 透過 handleCurrentPageChange 把 currentPage 改成WeatherSetting */}\r\n      <Cog onClick={() => handleCurrentPageChange('WeatherSetting')}/>\r\n\t\t\t<Location>{locationName}</Location>\r\n\t\t\t<Description>{description} {comfortability}</Description>\r\n\t\t\t<CurrentWeather>\r\n\t\t\t\t<Temperature>\r\n\t\t\t\t\t{Math.round(temperature)} <Celsius>°C</Celsius>\r\n\t\t\t\t</Temperature>\r\n\t\t\t\t<WeatherIcon weatherCode={weatherCode} moment={moment} />\r\n\t\t\t</CurrentWeather>\r\n\t\t\t<AirFlow>\r\n\t\t\t\t<AirFlowIcon /> {windSpeed} m/h\r\n          </AirFlow>\r\n\t\t\t<Rain>\r\n\t\t\t\t<RainIcon /> {rainPossibility}%\r\n          </Rain>\r\n\t\t\t<Refresh onClick={fetchData}\r\n\t\t\t\tisLoading={isLoading}>\r\n\t\t\t\t最後觀測時間：{new Intl.DateTimeFormat('zh-TW', {\r\n\t\t\t\t\thour: 'numeric',\r\n\t\t\t\t\tminute: 'numeric',\r\n\t\t\t\t}).format(dayjs(observationTime))} {' '}\r\n\t\t\t\t{isLoading ? <LoadingIcon /> : <RefreshIcon />}\r\n\t\t\t</Refresh>\r\n\t\t</WeatherCardWrapper>\r\n\t)\r\n}\r\n\r\nexport default WeatherCard\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js",["47","48"],"//step 1 : 匯入react套件\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\n\r\n//step 2 : 將原本 fetchWeatherForecast ,fetchCurrentWeather 所需的元素搬進來\r\nconst fetchWeatherForecast = ({ baseUrl, forecastWeatherUrl, authorizationKey, cityName }) => {\r\n\treturn fetch(\r\n\t\t`https://${baseUrl}/${forecastWeatherUrl}Authorization=${authorizationKey}&locationName=${cityName}`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconsole.log('data', data)\r\n\t\t\tconst locationData = data.records.locations[0].location[0]\r\n\t\t\tconst weatherElements = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['Wx', 'PoP12h', 'MaxCI'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.time[0].elementValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\treturn {\r\n\t\t\t\tdescription: weatherElements.Wx[0].value,\r\n\t\t\t\tweatherCode: weatherElements.Wx[1].value,\r\n\t\t\t\trainPossibility: weatherElements.PoP12h[0].value,\r\n\t\t\t\tcomfortability: weatherElements.MaxCI[0].value,\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\n\r\nconst fetchCurrentWeather = ({ baseUrl, currentWeatherUrl, authorizationKey, locationName }) => {\r\n\tconsole.log('locationName39', locationName)\r\n\tconsole.log('baseUrl', baseUrl)\r\n\tconsole.log(' currentWeatherUrl', currentWeatherUrl)\r\n\treturn fetch(\r\n\t\t`https://${baseUrl}/${currentWeatherUrl}Authorization=${authorizationKey}&locationName=${locationName}`\r\n\t).then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconst locationData = data.records.location[0]\r\n\t\t\tconst weatherElements = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['WDSD', 'TEMP', 'Weather', 'HUMD'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.elementValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\treturn {\r\n\t\t\t\tlocationName: locationData.locationName,\r\n\t\t\t\twindSpeed: weatherElements.WDSD,\r\n\t\t\t\ttemperature: weatherElements.TEMP,\r\n\t\t\t\tobservationTime: locationData.time.obsTime,\r\n\t\t\t}\r\n\t\t})\r\n\r\n}\r\n\r\n//step 7 : 變數帶入api\r\nconst useWeatherAPI = ({ baseUrl, currentWeatherUrl, forecastWeatherUrl, locationName, cityName, authorizationKey }) => {\r\n\tconsole.log('forecastWeatherUrl', forecastWeatherUrl)\r\n\tconsole.log('locationName66', locationName)\r\n\tconsole.log('baseUrl', baseUrl)\r\n\tconsole.log(' currentWeatherUrl', currentWeatherUrl)\r\n\t// step 3 : useState 中用來定義 weatherElement 的部分\r\n\tconst [weatherElement, setWeatherElement] = useState({\r\n\t\tobservationTime: new Date(),\r\n\t\tlocationName: '',\r\n\t\ttemperature: 0,\r\n\t\twindSpeed: 0,\r\n\t\tdescription: '',\r\n\t\tweatherCode: 0,\r\n\t\trainPossibility: 0,\r\n\t\tcomfortability: '',\r\n\t\tisLoading: true\r\n\t})\r\n\t//step 4 : 透過useCallback來定義 fetchData() 的部分\r\n\tconst fetchData = useCallback(async () => {\r\n\t\tsetWeatherElement((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tisLoading: true,\r\n\t\t}))\r\n\t\t//step 8 : 把 authorizationKey, locationName, cityName 傳到api中\r\n\t\tconst [currentWeather, weatherForecast] = await Promise.all([\r\n\t\t\tfetchCurrentWeather({ baseUrl,currentWeatherUrl,authorizationKey, locationName}),\r\n\t\t\tfetchWeatherForecast({ baseUrl,forecastWeatherUrl, authorizationKey, cityName }),\r\n\t\t])\r\n\r\n\t\tsetWeatherElement({\r\n\t\t\t...currentWeather,\r\n\t\t\t...weatherForecast,\r\n\t\t\tisLoading: false,\r\n\t\t})\r\n\t\t// step 9 : 在useCallback中把變數放入dependencies array中\r\n\t}, [authorizationKey, locationName, cityName])\r\n\t//step 5 : 透過 useEffect 用來呼叫 fetchData 的部分\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [fetchData])\r\n\t//step 6 : 回傳要讓其他元件使用的資料或方法\r\n\treturn [weatherElement, fetchData]\r\n}\r\n\r\nexport default useWeatherAPI\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":49},{"ruleId":"53","severity":1,"message":"57","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"58","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":49},{"ruleId":"53","severity":1,"message":"59","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":102,"column":5,"nodeType":"62","endLine":102,"endColumn":47,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'baseUrl', 'currentWeatherUrl', and 'forecastWeatherUrl'. Either include them or remove the dependency array.","ArrayExpression",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName]",{"range":"69","text":"70"},[3620,3662],"[baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName]"]