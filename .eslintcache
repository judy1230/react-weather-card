[{"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js":"1","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js":"3","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js":"4","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js":"5","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js":"6","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js":"7","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js":"8","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js":"9","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\TemperaturePrediction.js":"10","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyTemperaturePrediction.js":"11","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyWeatherIcons.js":"12"},{"size":944,"mtime":1613804688379,"results":"13","hashOfConfig":"14"},{"size":5064,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":364,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2782,"mtime":1613804688363,"results":"17","hashOfConfig":"14"},{"size":3832,"mtime":1611897840298,"results":"18","hashOfConfig":"14"},{"size":3161,"mtime":1613976711269,"results":"19","hashOfConfig":"14"},{"size":6090,"mtime":1613976788376,"results":"20","hashOfConfig":"14"},{"size":4858,"mtime":1613964691402,"results":"21","hashOfConfig":"14"},{"size":3293,"mtime":1611977201095,"results":"22","hashOfConfig":"14"},{"size":2019,"mtime":1613976770964,"results":"23","hashOfConfig":"14"},{"size":2290,"mtime":1613960174528,"results":"24","hashOfConfig":"14"},{"size":2794,"mtime":1613804688366,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dbh6cv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\index.js",[],["53","54"],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\reportWebVitals.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeatherIcon.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\utils\\helpers.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\App.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherCard.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\hooks\\useWeatherAPI.js",["55","56","57","58"],"import React, { useState, useEffect, useCallback } from 'react'\r\n\r\nconst fetchCurrentWeather = ({ authorizationKey, locationName }) => {\r\n\treturn fetch(\r\n\t\t`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${authorizationKey}&locationName=${locationName}`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconst locationData = data.records.location[0]\r\n\t\t\tconst weatherElements = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['WDSD', 'TEMP'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.elementValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tobservationTime: locationData.time.obsTime,\r\n\t\t\t\tlocationName: locationData.locationName,\r\n\t\t\t\ttemperature: weatherElements.TEMP,\r\n\t\t\t\twindSpeed: weatherElements.WDSD,\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nconst fetchWeatherForecast = ({ authorizationKey, cityName }) => {\r\n\treturn fetch(\r\n\t\t`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${authorizationKey}&locationName=${cityName}`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconst locationData = data.records.location[0]\r\n\t\t\tconst weatherElements = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['Wx', 'PoP', 'CI'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.time[0].parameter;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\tconst predicationData = locationData.weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['MaxT'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.time\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\tconst predicationTemps = predicationData.MaxT.flatMap(item => item.parameter.parameterName)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdescription: weatherElements.Wx.parameterName,\r\n\t\t\t\tweatherCode: weatherElements.Wx.parameterValue,\r\n\t\t\t\trainPossibility: weatherElements.PoP.parameterName,\r\n\t\t\t\tcomfortability: weatherElements.CI.parameterName,\r\n\t\t\t\tpredicationTemps: predicationTemps\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nconst fetchWeeklyWeather = ({ authorizationKey, cityName }) => {\r\n\treturn fetch(\r\n\t\t`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-003?Authorization=${authorizationKey}`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tlet cityName = '宜蘭市'\r\n\t\t\tconst locationData = data.records.locations[0].location.filter(city => city.locationName == cityName)\r\n\t\t\tconsole.log('locationData', locationData)\r\n\t\t\tconst weeklyWeather = locationData[0].weatherElement.reduce(\r\n\t\t\t\t(neededElements, item) => {\r\n\t\t\t\t\tif (['Wx', 'PoP12h', 'T'].includes(item.elementName)) {\r\n\t\t\t\t\t\tneededElements[item.elementName] = item.time;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn neededElements\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\tconst WeatherCodes = weeklyWeather.Wx.flatMap(item => item.elementValue[1].value)\r\n\t\t\tconst weeklyPoP12h = weeklyWeather.PoP12h.flatMap(item => item.elementValue[0].value)\r\n\t\t\tconst weeklyT = weeklyWeather.T.flatMap(item => item.elementValue[0].value)\r\n\r\n\r\n\r\n\t\t\treturn {\r\n\t\t\t\tweatherCodes: WeatherCodes,\r\n\t\t\t\tweeklyPoP12h: weeklyPoP12h,\r\n\t\t\t\tweeklyT: weeklyT,\r\n\t\t\t}\r\n\t\t})\r\n}\r\nconst fetchAQI = ({ AQIKEY, cityName }) => {\r\n\treturn fetch(`https://data.epa.gov.tw/api/v1/aqx_p_432?limit=1000&api_key=${AQIKEY}&format=json`)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tconst locationData = data.records.filter(item => item.County == cityName)\r\n\t\t\tconst AQIData = locationData[0]['Status']\r\n\t\t\treturn AQIData\r\n\t\t})\r\n}\r\n\r\n\r\nconst useWeatherAPI = ({ baseUrl, currentWeatherUrl, forecastWeatherUrl, locationName, cityName, authorizationKey, AQIKEY }) => {\r\n\tconst [weatherElement, setWeatherElement] = useState({\r\n\t\tobservationTime: new Date(),\r\n\t\tlocationName: '',\r\n\t\ttemperature: 0,\r\n\t\twindSpeed: 0,\r\n\t\tdescription: '',\r\n\t\t// weatherCode: 0,\r\n\t\trainPossibility: 0,\r\n\t\tcomfortability: '',\r\n\t\tisLoading: true,\r\n\t\tpredicationTemps: [],\r\n\t\tweatherCodes: [],\r\n\t\tweeklyPoP12h: [],\r\n\t\tweeklyT: [],\r\n\t\tAQIData:''\r\n\t})\r\n\tconst fetchData = useCallback(async () => {\r\n\t\tsetWeatherElement((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tisLoading: true,\r\n\t\t}))\r\n\t\tconst [currentWeather, weatherForecast, weeklyWeather, AQIData ] = await Promise.all([\r\n\t\t\tfetchCurrentWeather({ baseUrl, currentWeatherUrl, authorizationKey, locationName}),\r\n\t\t\tfetchWeatherForecast({ baseUrl, forecastWeatherUrl, authorizationKey, cityName }),\r\n\t\t\tfetchWeeklyWeather({ authorizationKey, cityName }),\r\n\t\t\tfetchAQI({ AQIKEY, cityName})\r\n\t\t])\r\n\r\n\t\tsetWeatherElement({\r\n\t\t\t...currentWeather,\r\n\t\t\t...weatherForecast,\r\n\t\t\t...weeklyWeather,\r\n\t\t\tAQIData,\r\n\t\t\tisLoading: false,\r\n\t\t})\r\n\t}, [authorizationKey, locationName, cityName])\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [fetchData])\r\n\treturn [weatherElement, fetchData]\r\n}\r\n\r\nexport default useWeatherAPI\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\views\\WeatherSetting.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\TemperaturePrediction.js",[],"C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyTemperaturePrediction.js",["59","60","61","62","63"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport WeeklyWeatherIcons from './WeeklyWeatherIcons'\r\n\r\nconst Container= styled.div`\r\n\theight: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n\ttransition-duration: 1s;\r\n\topacity: 0;\r\n\t.dayWeather:nth-child(1) {\r\n    transition-delay: 0.2s;\r\n  }\r\n\t.dayWeather:nth-child(2) {\r\n\t\ttransition-delay: 0.3s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(3) {\r\n\t\ttransition-delay: 0.4s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(4) {\r\n\t\ttransition-delay: 0.5s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(5) {\r\n\t\ttransition-delay: 0.6s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(6) {\r\n\t\ttransition-delay: 0.7s;\r\n\t}\r\n\r\n\t.dayWeather:nth-child(7) {\r\n\t\ttransition-delay: 0.8s;\r\n\t}\r\n`\r\n\r\nconst DayWeather = styled.div`\r\n\tpadding: 2px;\r\n\tmargin: 10px 5px 0 10px;\r\n  width: calc(100% / 7 - 5px);\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  top: 20px;\r\n  transition: 0.5s;\r\n\t/* box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2), 0px 5px 5px -5px rgba(0, 0, 0, 0.3); */\r\n\tborder-radius: 5px;\r\n\topacity: 0;\r\n\tsvg {\r\n\t\twidth: 100%;\r\n  \tmax-width: 30px;\r\n\t}\r\n\tsvg .sun {\r\n\t\tfill: #FFD633;\r\n\t\tstroke-width: 30px;\r\n\t\tstroke: rgba(255, 214, 51, 0.5);\r\n\t\tstroke-dasharray: 5px;\r\n\t}\r\n  svg .rain {\r\n\t\tstroke: #4DACFF;\r\n\t\tstroke-width: 5px;\r\n\t}\r\n svg .cloud {\r\n\t\tfill: #ccc;\r\n\t}\r\n\th3 {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 8px;\r\n\t\tfont-weight: 400;\r\n\t\tcolor: #333;\r\n\t\tletter-spacing: 1px;\r\n\t\tmargin: 0px;\r\n\t\tpadding: 0px;\r\n\t}\r\n\r\n\r\n\r\n\r\n`\r\n\r\n\r\nconst WeeklyTemperaturePrediction = ({ weatherCodes, weeklyPoP12h,\r\n\tweeklyT, moment }) => {\r\n\tweatherCodes = weatherCodes.filter((item, index) => index % 2 == 0)\r\n\t// weeklyPoP12h = weeklyPoP12h.filter((item, index) => index % 2 == 0)\r\n\tweeklyT = weeklyT.filter((item, index) => index % 2 == 0)\r\n\r\n\tlet indexs = [0, 1, 2, 3, 4, 5, 6]\r\n\tlet weeks = [\"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SAT\", \"SUN\"]\r\n\r\n\tconst dayWeather = indexs.map((index) =>\r\n\t\t<DayWeather className=\"dayWeather\">\r\n\t\t\t<h3>{ weeks[index]}</h3>\r\n\t\t\t<WeeklyWeatherIcons weatherCode={weatherCodes[index]} moment={moment} />\r\n\t\t\t<h3>{weeklyT[index]}°C</h3>\r\n\t\t\t{/* <h3>{weeklyPoP12h[index]}%</h3> */}\r\n\t\t</DayWeather>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Container className=\"box\">\r\n\t\t\t{dayWeather}\r\n\t\t</Container>\r\n\r\n\t)\r\n}\r\n\r\nexport default WeeklyTemperaturePrediction\r\n","C:\\Users\\wwwji\\OneDrive\\文件\\React\\react-weather-card-pwa\\src\\components\\WeeklyWeatherIcons.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":73,"column":93,"nodeType":"74","messageId":"75","endLine":73,"endColumn":95},{"ruleId":"72","severity":1,"message":"73","line":101,"column":65,"nodeType":"74","messageId":"75","endLine":101,"endColumn":67},{"ruleId":"76","severity":1,"message":"77","line":144,"column":5,"nodeType":"78","endLine":144,"endColumn":47,"suggestions":"79"},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"68","severity":1,"message":"81","line":1,"column":25,"nodeType":"70","messageId":"71","endLine":1,"endColumn":33},{"ruleId":"68","severity":1,"message":"82","line":1,"column":35,"nodeType":"70","messageId":"71","endLine":1,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":85,"column":64,"nodeType":"74","messageId":"75","endLine":85,"endColumn":66},{"ruleId":"72","severity":1,"message":"73","line":87,"column":54,"nodeType":"74","messageId":"75","endLine":87,"endColumn":56},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'AQIKEY', 'baseUrl', 'currentWeatherUrl', and 'forecastWeatherUrl'. Either include them or remove the dependency array.","ArrayExpression",["85"],"'useRef' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName, AQIKEY]",{"range":"88","text":"89"},[4680,4722],"[baseUrl, currentWeatherUrl, authorizationKey, locationName, forecastWeatherUrl, cityName, AQIKEY]"]